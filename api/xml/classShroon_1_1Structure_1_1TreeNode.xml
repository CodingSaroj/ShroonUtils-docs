<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classShroon_1_1Structure_1_1TreeNode" kind="class" language="C++" prot="public">
    <compoundname>Shroon::Structure::TreeNode</compoundname>
    <includes refid="Tree_8hpp" local="no">Tree.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename ValueType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classShroon_1_1Structure_1_1TreeNode_1a981ce75cb9b79817ad4d8515d2be01be" prot="private" static="no" mutable="no">
        <type>ValueType</type>
        <definition>ValueType Shroon::Structure::TreeNode&lt; ValueType &gt;::m_Base</definition>
        <argsstring></argsstring>
        <name>m_Base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.hpp" line="377" column="23" bodyfile="src/Tree.hpp" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classShroon_1_1Structure_1_1TreeNode_1ace86eecee2d8348c7e640cc00c99b7fa" prot="private" static="no" mutable="no">
        <type><ref refid="classShroon_1_1Structure_1_1TreeNode" kindref="compound">TreeNode</ref>&lt; ValueType &gt; *</type>
        <definition>TreeNode&lt;ValueType&gt;* Shroon::Structure::TreeNode&lt; ValueType &gt;::m_Parent</definition>
        <argsstring></argsstring>
        <name>m_Parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.hpp" line="379" column="23" bodyfile="src/Tree.hpp" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classShroon_1_1Structure_1_1TreeNode_1ab29dd7d42e01de7d65dddc7ab06a53d8" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="classShroon_1_1Structure_1_1TreeNode" kindref="compound">TreeNode</ref>&lt; ValueType &gt; &gt; &gt;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;TreeNode&lt;ValueType&gt; &gt; &gt; Shroon::Structure::TreeNode&lt; ValueType &gt;::m_Children</definition>
        <argsstring></argsstring>
        <name>m_Children</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.hpp" line="380" column="25" bodyfile="src/Tree.hpp" bodystart="380" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classShroon_1_1Structure_1_1TreeNode_1aeecf799a2e77c30a56e82cdd8caa9ded" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Shroon::Structure::TreeNode&lt; ValueType &gt;::TreeNode</definition>
        <argsstring>(const ValueType &amp;value, TreeNode&lt; ValueType &gt; *parent=nullptr)</argsstring>
        <name>TreeNode</name>
        <param>
          <type>const ValueType &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classShroon_1_1Structure_1_1TreeNode" kindref="compound">TreeNode</ref>&lt; ValueType &gt; *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Constructs a <computeroutput>TreeNode&lt;ValueType&gt;</computeroutput> containing <computeroutput>value</computeroutput> as a child of <computeroutput>parent</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to store in this node. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to parent of this node. <computeroutput>nullptr</computeroutput> is default and means this is root node. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.hpp" line="58" column="13" bodyfile="src/Tree.hpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classShroon_1_1Structure_1_1TreeNode_1a31bea01fb59a1d33b93ff20d64d6168f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Shroon::Structure::TreeNode&lt; ValueType &gt;::TreeNode</definition>
        <argsstring>(ValueType &amp;&amp;value, TreeNode&lt; ValueType &gt; *parent=nullptr)</argsstring>
        <name>TreeNode</name>
        <param>
          <type>ValueType &amp;&amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classShroon_1_1Structure_1_1TreeNode" kindref="compound">TreeNode</ref>&lt; ValueType &gt; *</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Constructs a <computeroutput>TreeNode&lt;ValueType&gt;</computeroutput> containing <computeroutput>value</computeroutput> as a child of <computeroutput>parent</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to store in this node. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to parent of this node. <computeroutput>nullptr</computeroutput> is default and means this is root node. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.hpp" line="70" column="13" bodyfile="src/Tree.hpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classShroon_1_1Structure_1_1TreeNode_1ae4b1f8373afce1331edf78532291b880" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>CArgs</declname>
            <defname>CArgs</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Shroon::Structure::TreeNode&lt; ValueType &gt;::TreeNode</definition>
        <argsstring>(TreeNode&lt; ValueType &gt; *parent, CArgs &amp;&amp;... cargs)</argsstring>
        <name>TreeNode</name>
        <param>
          <type><ref refid="classShroon_1_1Structure_1_1TreeNode" kindref="compound">TreeNode</ref>&lt; ValueType &gt; *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>CArgs &amp;&amp;...</type>
          <declname>cargs</declname>
        </param>
        <briefdescription>
<para>Constructs a <computeroutput>TreeNode&lt;ValueType&gt;</computeroutput> containing value which is constructed using <computeroutput>cargs</computeroutput> as a child of <computeroutput>parent</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CArgs</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter pack of types of the args of the constructor of <computeroutput>ValueType</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to parent of this node. <computeroutput>nullptr</computeroutput> means this is root node. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cargs</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter pack containing args for the constructor of <computeroutput>ValueType</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.hpp" line="85" column="13" bodyfile="src/Tree.hpp" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classShroon_1_1Structure_1_1TreeNode_1aa4e78ea3d9bede1840d04815b45d20af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ValueType &amp;</type>
        <definition>ValueType&amp; Shroon::Structure::TreeNode&lt; ValueType &gt;::Get</definition>
        <argsstring>()</argsstring>
        <name>Get</name>
        <briefdescription>
<para>Returns an l-value reference to the stored value in this node. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An l-value reference to the stored value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.hpp" line="95" column="31" bodyfile="src/Tree.hpp" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classShroon_1_1Structure_1_1TreeNode_1aa70279d5baeef7119fb8e4c03b928302" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const ValueType &amp;</type>
        <definition>const ValueType&amp; Shroon::Structure::TreeNode&lt; ValueType &gt;::Get</definition>
        <argsstring>() const</argsstring>
        <name>Get</name>
        <briefdescription>
<para>Returns a const l-value reference to the stored value in this node. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A const l-value reference to the stored value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.hpp" line="105" column="37" bodyfile="src/Tree.hpp" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classShroon_1_1Structure_1_1TreeNode_1ae21faa6a293fda425422a678fd485f65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classShroon_1_1Structure_1_1TreeNode" kindref="compound">TreeNode</ref>&lt; ValueType &gt; *</type>
        <definition>TreeNode&lt;ValueType&gt;* Shroon::Structure::TreeNode&lt; ValueType &gt;::GetParent</definition>
        <argsstring>()</argsstring>
        <name>GetParent</name>
        <briefdescription>
<para>Returns a pointer to the parent node. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A pointer to the parent node. Returns <computeroutput>nullptr</computeroutput> if it is the root node. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.hpp" line="115" column="30" bodyfile="src/Tree.hpp" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classShroon_1_1Structure_1_1TreeNode_1a8f9157cfcf1fbe101c6cdd70ec53326a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classShroon_1_1Structure_1_1TreeNode" kindref="compound">TreeNode</ref>&lt; ValueType &gt; *</type>
        <definition>const TreeNode&lt;ValueType&gt;* Shroon::Structure::TreeNode&lt; ValueType &gt;::GetParent</definition>
        <argsstring>() const</argsstring>
        <name>GetParent</name>
        <briefdescription>
<para>Returns a const pointer to the parent node. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A const pointer to the parent node. Returns <computeroutput>nullptr</computeroutput> if it is the root node. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.hpp" line="125" column="36" bodyfile="src/Tree.hpp" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classShroon_1_1Structure_1_1TreeNode_1aa7c0736e1710bd05a77a45d5685b0526" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Shroon::Structure::TreeNode&lt; ValueType &gt;::ChildrenCount</definition>
        <argsstring>() const</argsstring>
        <name>ChildrenCount</name>
        <briefdescription>
<para>Returns the number of children this node has. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Number of children this node has. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.hpp" line="135" column="27" bodyfile="src/Tree.hpp" bodystart="135" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classShroon_1_1Structure_1_1TreeNode_1a3518ad033b110f2771a127b8e463136e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classShroon_1_1Structure_1_1TreeNode" kindref="compound">TreeNode</ref>&lt; ValueType &gt; &amp;</type>
        <definition>TreeNode&lt;ValueType&gt;&amp; Shroon::Structure::TreeNode&lt; ValueType &gt;::GetChild</definition>
        <argsstring>(size_t index=0)</argsstring>
        <name>GetChild</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Returns the <computeroutput>index</computeroutput> th child of this node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the child to return. <computeroutput>0</computeroutput> by default.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An l-value reference to the <computeroutput>index</computeroutput> th child of this node. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.hpp" line="147" column="23" bodyfile="src/Tree.hpp" bodystart="147" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classShroon_1_1Structure_1_1TreeNode_1a3ba3063214d984b2483a111ea88ac6a6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classShroon_1_1Structure_1_1TreeNode" kindref="compound">TreeNode</ref>&lt; ValueType &gt; &amp;</type>
        <definition>const TreeNode&lt;ValueType&gt;&amp; Shroon::Structure::TreeNode&lt; ValueType &gt;::GetChild</definition>
        <argsstring>(size_t index=0) const</argsstring>
        <name>GetChild</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Returns the <computeroutput>index</computeroutput> th child of this node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the child to return. <computeroutput>0</computeroutput> by default.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A const l-value reference to the <computeroutput>index</computeroutput> th child of this node. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.hpp" line="164" column="29" bodyfile="src/Tree.hpp" bodystart="164" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classShroon_1_1Structure_1_1TreeNode_1a59ea375f96aca4e25d57a3821de7f2e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classShroon_1_1Structure_1_1TreeNode" kindref="compound">TreeNode</ref>&lt; ValueType &gt; &amp;</type>
        <definition>TreeNode&lt;ValueType&gt;&amp; Shroon::Structure::TreeNode&lt; ValueType &gt;::AddChild</definition>
        <argsstring>(const TreeNode&lt; ValueType &gt; &amp;node)</argsstring>
        <name>AddChild</name>
        <param>
          <type>const <ref refid="classShroon_1_1Structure_1_1TreeNode" kindref="compound">TreeNode</ref>&lt; ValueType &gt; &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Adds a child node which is a copy of <computeroutput>node</computeroutput>, to this node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node used to copy construct the child node.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The child node which just got added. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.hpp" line="181" column="23" bodyfile="src/Tree.hpp" bodystart="181" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classShroon_1_1Structure_1_1TreeNode_1a73b9789856e7ed3fc1e56044e880a9af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classShroon_1_1Structure_1_1TreeNode" kindref="compound">TreeNode</ref>&lt; ValueType &gt; &amp;</type>
        <definition>TreeNode&lt;ValueType&gt;&amp; Shroon::Structure::TreeNode&lt; ValueType &gt;::AddChild</definition>
        <argsstring>(TreeNode&lt; ValueType &gt; &amp;&amp;node)</argsstring>
        <name>AddChild</name>
        <param>
          <type><ref refid="classShroon_1_1Structure_1_1TreeNode" kindref="compound">TreeNode</ref>&lt; ValueType &gt; &amp;&amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Adds a child node which is a copy of <computeroutput>node</computeroutput>, to this node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node used to move construct the child node.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The child node which just got added. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.hpp" line="195" column="23" bodyfile="src/Tree.hpp" bodystart="195" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classShroon_1_1Structure_1_1TreeNode_1a76642ffa3cb42edc5bc1caa1f5d543e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classShroon_1_1Structure_1_1TreeNode" kindref="compound">TreeNode</ref>&lt; ValueType &gt; &amp;</type>
        <definition>TreeNode&lt;ValueType&gt;&amp; Shroon::Structure::TreeNode&lt; ValueType &gt;::AddChild</definition>
        <argsstring>(const ValueType &amp;value)</argsstring>
        <name>AddChild</name>
        <param>
          <type>const ValueType &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Adds a child node which contains <computeroutput>value</computeroutput>, to this node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value which the child node will contain.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The child node which just got added. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.hpp" line="209" column="23" bodyfile="src/Tree.hpp" bodystart="209" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classShroon_1_1Structure_1_1TreeNode_1aa0bf4b7c6b484faee303b2e2e8cc8ce3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classShroon_1_1Structure_1_1TreeNode" kindref="compound">TreeNode</ref>&lt; ValueType &gt; &amp;</type>
        <definition>TreeNode&lt;ValueType&gt;&amp; Shroon::Structure::TreeNode&lt; ValueType &gt;::AddChild</definition>
        <argsstring>(ValueType &amp;&amp;value)</argsstring>
        <name>AddChild</name>
        <param>
          <type>ValueType &amp;&amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Adds a child node which contains <computeroutput>value</computeroutput>, to this node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value which the child node will contain.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The child node which just got added. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.hpp" line="221" column="23" bodyfile="src/Tree.hpp" bodystart="221" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classShroon_1_1Structure_1_1TreeNode_1ac06b3c8d101adf2e6bc93ba2804bf4ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>CArgs</declname>
            <defname>CArgs</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classShroon_1_1Structure_1_1TreeNode" kindref="compound">TreeNode</ref>&lt; ValueType &gt; &amp;</type>
        <definition>TreeNode&lt;ValueType&gt;&amp; Shroon::Structure::TreeNode&lt; ValueType &gt;::AddChild</definition>
        <argsstring>(CArgs &amp;&amp;... cargs)</argsstring>
        <name>AddChild</name>
        <param>
          <type>CArgs &amp;&amp;...</type>
          <declname>cargs</declname>
        </param>
        <briefdescription>
<para>Adds a child node which contains value constructed using <computeroutput>cargs</computeroutput>, to this node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CArgs</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter pack of types of the args of the constructor of <computeroutput>ValueType</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cargs</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter pack containing args for constructor of <computeroutput>ValueType</computeroutput> which will be stored in the child node.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The child node which just got added. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.hpp" line="237" column="23" bodyfile="src/Tree.hpp" bodystart="237" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="classShroon_1_1Structure_1_1TreeNode_1aa6ed04d7efc2ae2f77bdf0c8ccb59f78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classShroon_1_1Structure_1_1TreeNode" kindref="compound">TreeNode</ref>&lt; ValueType &gt; *</type>
        <definition>TreeNode&lt;ValueType&gt;* Shroon::Structure::TreeNode&lt; ValueType &gt;::AddSibling</definition>
        <argsstring>(const TreeNode&lt; ValueType &gt; &amp;node)</argsstring>
        <name>AddSibling</name>
        <param>
          <type>const <ref refid="classShroon_1_1Structure_1_1TreeNode" kindref="compound">TreeNode</ref>&lt; ValueType &gt; &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Adds a sibling node (node of same parent) which is a copy of <computeroutput>node</computeroutput>, to this node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node used to copy construct the sibling node.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The sibling node which just got added. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.hpp" line="249" column="23" bodyfile="src/Tree.hpp" bodystart="249" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classShroon_1_1Structure_1_1TreeNode_1a415e841f393f7d146363fa52067b01fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classShroon_1_1Structure_1_1TreeNode" kindref="compound">TreeNode</ref>&lt; ValueType &gt; *</type>
        <definition>TreeNode&lt;ValueType&gt;* Shroon::Structure::TreeNode&lt; ValueType &gt;::AddSibling</definition>
        <argsstring>(TreeNode&lt; ValueType &gt; &amp;&amp;node)</argsstring>
        <name>AddSibling</name>
        <param>
          <type><ref refid="classShroon_1_1Structure_1_1TreeNode" kindref="compound">TreeNode</ref>&lt; ValueType &gt; &amp;&amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Adds a sibling node (node of same parent) which is a copy of <computeroutput>node</computeroutput>, to this node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node used to move construct the sibling node.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The sibling node which just got added. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.hpp" line="266" column="23" bodyfile="src/Tree.hpp" bodystart="266" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classShroon_1_1Structure_1_1TreeNode_1a5025e54016e0ee4dfd67d14ecd1c08e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classShroon_1_1Structure_1_1TreeNode" kindref="compound">TreeNode</ref>&lt; ValueType &gt; *</type>
        <definition>TreeNode&lt;ValueType&gt;* Shroon::Structure::TreeNode&lt; ValueType &gt;::AddSibling</definition>
        <argsstring>(const ValueType &amp;value)</argsstring>
        <name>AddSibling</name>
        <param>
          <type>const ValueType &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Adds a sibling node (node of same parent) which contains <computeroutput>value</computeroutput>, to this node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value which the sibling node will contain.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The sibling node which just got added. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.hpp" line="283" column="23" bodyfile="src/Tree.hpp" bodystart="283" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classShroon_1_1Structure_1_1TreeNode_1aecc70e898292978774a56bad490342f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classShroon_1_1Structure_1_1TreeNode" kindref="compound">TreeNode</ref>&lt; ValueType &gt; *</type>
        <definition>TreeNode&lt;ValueType&gt;* Shroon::Structure::TreeNode&lt; ValueType &gt;::AddSibling</definition>
        <argsstring>(ValueType &amp;&amp;value)</argsstring>
        <name>AddSibling</name>
        <param>
          <type>ValueType &amp;&amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Adds a sibling node (node of same parent) which contains <computeroutput>value</computeroutput>, to this node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value which the sibling node will contain.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The sibling node which just got added. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.hpp" line="300" column="23" bodyfile="src/Tree.hpp" bodystart="300" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classShroon_1_1Structure_1_1TreeNode_1af893dbbe11bc2c8846a5ad1aa55e24ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>CArgs</declname>
            <defname>CArgs</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classShroon_1_1Structure_1_1TreeNode" kindref="compound">TreeNode</ref>&lt; ValueType &gt; *</type>
        <definition>TreeNode&lt;ValueType&gt;* Shroon::Structure::TreeNode&lt; ValueType &gt;::AddSibling</definition>
        <argsstring>(CArgs &amp;&amp;... cargs)</argsstring>
        <name>AddSibling</name>
        <param>
          <type>CArgs &amp;&amp;...</type>
          <declname>cargs</declname>
        </param>
        <briefdescription>
<para>Adds a sibling node (node with same parent) which contains value constructed using <computeroutput>cargs</computeroutput>, to this node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CArgs</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter pack of types of the args of the constructor of <computeroutput>ValueType</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cargs</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter pack containing args for constructor of <computeroutput>ValueType</computeroutput> which will be stored in sibling node.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The sibling node which just got added. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.hpp" line="322" column="23" bodyfile="src/Tree.hpp" bodystart="322" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="classShroon_1_1Structure_1_1TreeNode_1a50c35fc7006d451b1d23045507017b1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ValueType &amp;</type>
        <definition>ValueType&amp; Shroon::Structure::TreeNode&lt; ValueType &gt;::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <briefdescription>
<para>Returns an l-value reference to the stored value in this node. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An l-value reference to the stored value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.hpp" line="337" column="31" bodyfile="src/Tree.hpp" bodystart="337" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="classShroon_1_1Structure_1_1TreeNode_1a732ac1780e650530dab8ff53b44ffa0f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const ValueType &amp;</type>
        <definition>const ValueType&amp; Shroon::Structure::TreeNode&lt; ValueType &gt;::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
<para>Returns a const l-value reference to the stored value in this node. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A const l-value reference to the stored value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.hpp" line="347" column="37" bodyfile="src/Tree.hpp" bodystart="347" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="classShroon_1_1Structure_1_1TreeNode_1af00eb9076c1bc08f6b192afac0191e3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classShroon_1_1Structure_1_1TreeNode" kindref="compound">TreeNode</ref>&lt; ValueType &gt; &amp;</type>
        <definition>TreeNode&lt;ValueType&gt;&amp; Shroon::Structure::TreeNode&lt; ValueType &gt;::operator[]</definition>
        <argsstring>(size_t index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns the <computeroutput>index</computeroutput> th child of this node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the child to return. <computeroutput>0</computeroutput> by default.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An l-value reference to the <computeroutput>index</computeroutput> th child of this node. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.hpp" line="359" column="23" bodyfile="src/Tree.hpp" bodystart="359" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="classShroon_1_1Structure_1_1TreeNode_1ab4d23daad7d807db45868ae4cd42f865" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classShroon_1_1Structure_1_1TreeNode" kindref="compound">TreeNode</ref>&lt; ValueType &gt; &amp;</type>
        <definition>const TreeNode&lt;ValueType&gt;&amp; Shroon::Structure::TreeNode&lt; ValueType &gt;::operator[]</definition>
        <argsstring>(size_t index) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns the <computeroutput>index</computeroutput> th child of this node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the child to return. <computeroutput>0</computeroutput> by default.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A const l-value reference to the <computeroutput>index</computeroutput> th child of this node. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tree.hpp" line="371" column="29" bodyfile="src/Tree.hpp" bodystart="371" bodyend="374"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>It defines one node in a tree of nodes. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ValueType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of value this node stores. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Shroon::Structure::TreeNode&lt; ValueType &gt;</label>
        <link refid="classShroon_1_1Structure_1_1TreeNode"/>
      </node>
    </collaborationgraph>
    <location file="src/Tree.hpp" line="49" column="1" bodyfile="src/Tree.hpp" bodystart="48" bodyend="381"/>
    <listofallmembers>
      <member refid="classShroon_1_1Structure_1_1TreeNode_1a59ea375f96aca4e25d57a3821de7f2e1" prot="public" virt="non-virtual"><scope>Shroon::Structure::TreeNode</scope><name>AddChild</name></member>
      <member refid="classShroon_1_1Structure_1_1TreeNode_1a73b9789856e7ed3fc1e56044e880a9af" prot="public" virt="non-virtual"><scope>Shroon::Structure::TreeNode</scope><name>AddChild</name></member>
      <member refid="classShroon_1_1Structure_1_1TreeNode_1a76642ffa3cb42edc5bc1caa1f5d543e4" prot="public" virt="non-virtual"><scope>Shroon::Structure::TreeNode</scope><name>AddChild</name></member>
      <member refid="classShroon_1_1Structure_1_1TreeNode_1aa0bf4b7c6b484faee303b2e2e8cc8ce3" prot="public" virt="non-virtual"><scope>Shroon::Structure::TreeNode</scope><name>AddChild</name></member>
      <member refid="classShroon_1_1Structure_1_1TreeNode_1ac06b3c8d101adf2e6bc93ba2804bf4ac" prot="public" virt="non-virtual"><scope>Shroon::Structure::TreeNode</scope><name>AddChild</name></member>
      <member refid="classShroon_1_1Structure_1_1TreeNode_1aa6ed04d7efc2ae2f77bdf0c8ccb59f78" prot="public" virt="non-virtual"><scope>Shroon::Structure::TreeNode</scope><name>AddSibling</name></member>
      <member refid="classShroon_1_1Structure_1_1TreeNode_1a415e841f393f7d146363fa52067b01fc" prot="public" virt="non-virtual"><scope>Shroon::Structure::TreeNode</scope><name>AddSibling</name></member>
      <member refid="classShroon_1_1Structure_1_1TreeNode_1a5025e54016e0ee4dfd67d14ecd1c08e5" prot="public" virt="non-virtual"><scope>Shroon::Structure::TreeNode</scope><name>AddSibling</name></member>
      <member refid="classShroon_1_1Structure_1_1TreeNode_1aecc70e898292978774a56bad490342f9" prot="public" virt="non-virtual"><scope>Shroon::Structure::TreeNode</scope><name>AddSibling</name></member>
      <member refid="classShroon_1_1Structure_1_1TreeNode_1af893dbbe11bc2c8846a5ad1aa55e24ab" prot="public" virt="non-virtual"><scope>Shroon::Structure::TreeNode</scope><name>AddSibling</name></member>
      <member refid="classShroon_1_1Structure_1_1TreeNode_1aa7c0736e1710bd05a77a45d5685b0526" prot="public" virt="non-virtual"><scope>Shroon::Structure::TreeNode</scope><name>ChildrenCount</name></member>
      <member refid="classShroon_1_1Structure_1_1TreeNode_1aa4e78ea3d9bede1840d04815b45d20af" prot="public" virt="non-virtual"><scope>Shroon::Structure::TreeNode</scope><name>Get</name></member>
      <member refid="classShroon_1_1Structure_1_1TreeNode_1aa70279d5baeef7119fb8e4c03b928302" prot="public" virt="non-virtual"><scope>Shroon::Structure::TreeNode</scope><name>Get</name></member>
      <member refid="classShroon_1_1Structure_1_1TreeNode_1a3518ad033b110f2771a127b8e463136e" prot="public" virt="non-virtual"><scope>Shroon::Structure::TreeNode</scope><name>GetChild</name></member>
      <member refid="classShroon_1_1Structure_1_1TreeNode_1a3ba3063214d984b2483a111ea88ac6a6" prot="public" virt="non-virtual"><scope>Shroon::Structure::TreeNode</scope><name>GetChild</name></member>
      <member refid="classShroon_1_1Structure_1_1TreeNode_1ae21faa6a293fda425422a678fd485f65" prot="public" virt="non-virtual"><scope>Shroon::Structure::TreeNode</scope><name>GetParent</name></member>
      <member refid="classShroon_1_1Structure_1_1TreeNode_1a8f9157cfcf1fbe101c6cdd70ec53326a" prot="public" virt="non-virtual"><scope>Shroon::Structure::TreeNode</scope><name>GetParent</name></member>
      <member refid="classShroon_1_1Structure_1_1TreeNode_1a981ce75cb9b79817ad4d8515d2be01be" prot="private" virt="non-virtual"><scope>Shroon::Structure::TreeNode</scope><name>m_Base</name></member>
      <member refid="classShroon_1_1Structure_1_1TreeNode_1ab29dd7d42e01de7d65dddc7ab06a53d8" prot="private" virt="non-virtual"><scope>Shroon::Structure::TreeNode</scope><name>m_Children</name></member>
      <member refid="classShroon_1_1Structure_1_1TreeNode_1ace86eecee2d8348c7e640cc00c99b7fa" prot="private" virt="non-virtual"><scope>Shroon::Structure::TreeNode</scope><name>m_Parent</name></member>
      <member refid="classShroon_1_1Structure_1_1TreeNode_1a50c35fc7006d451b1d23045507017b1b" prot="public" virt="non-virtual"><scope>Shroon::Structure::TreeNode</scope><name>operator*</name></member>
      <member refid="classShroon_1_1Structure_1_1TreeNode_1a732ac1780e650530dab8ff53b44ffa0f" prot="public" virt="non-virtual"><scope>Shroon::Structure::TreeNode</scope><name>operator*</name></member>
      <member refid="classShroon_1_1Structure_1_1TreeNode_1af00eb9076c1bc08f6b192afac0191e3b" prot="public" virt="non-virtual"><scope>Shroon::Structure::TreeNode</scope><name>operator[]</name></member>
      <member refid="classShroon_1_1Structure_1_1TreeNode_1ab4d23daad7d807db45868ae4cd42f865" prot="public" virt="non-virtual"><scope>Shroon::Structure::TreeNode</scope><name>operator[]</name></member>
      <member refid="classShroon_1_1Structure_1_1TreeNode_1aeecf799a2e77c30a56e82cdd8caa9ded" prot="public" virt="non-virtual"><scope>Shroon::Structure::TreeNode</scope><name>TreeNode</name></member>
      <member refid="classShroon_1_1Structure_1_1TreeNode_1a31bea01fb59a1d33b93ff20d64d6168f" prot="public" virt="non-virtual"><scope>Shroon::Structure::TreeNode</scope><name>TreeNode</name></member>
      <member refid="classShroon_1_1Structure_1_1TreeNode_1ae4b1f8373afce1331edf78532291b880" prot="public" virt="non-virtual"><scope>Shroon::Structure::TreeNode</scope><name>TreeNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
